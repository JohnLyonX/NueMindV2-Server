<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuex.edu.mapper.EduStudentMapper">

    <resultMap type="EduStudent" id="EduStudentResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
          <result property="url"    column="url"    />
        <result property="phoneNumber"    column="phone_number"    />
        <result property="password"    column="password"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <resultMap id="EduStudentEduStudentDetailsResult" type="EduStudent" extends="EduStudentResult">
        <collection property="eduStudentDetailsList" ofType="EduStudentDetails" column="id" select="selectEduStudentDetailsList" />
    </resultMap>

    <resultMap type="EduStudentDetails" id="EduStudentDetailsResult">
        <result property="id"    column="id"    />
        <result property="studentId"    column="student_id"    />
        <result property="school"    column="school"    />
        <result property="major"    column="major"    />
        <result property="grade"    column="grade"    />
        <result property="classinfo"    column="classinfo"    />
        <result property="age"    column="age"    />
        <result property="sex"    column="sex"    />
        <result property="email"    column="email"    />
        <result property="codeAbility"    column="code_ability"    />
        <result property="studyAbility"    column="study_ability"    />
        <result property="thinkingAbility"    column="thinking_ability"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectEduStudentVo">
        select id, name, url, phone_number, password, create_time, update_time from edu_student
    </sql>

    <select id="selectEduStudentList" parameterType="EduStudent" resultMap="EduStudentResult">
        <include refid="selectEduStudentVo"/>
        <where>
            <if test="url != null  and url != ''">and url = #{url}</if>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="phoneNumber != null  and phoneNumber != ''">and phone_number = #{phoneNumber}</if>
            <if test="password != null  and password != ''">and password = #{password}</if>
        </where>
    </select>

    <select id="selectEduStudentById" parameterType="Long" resultMap="EduStudentEduStudentDetailsResult">
        select id, name, url ,phone_number, password, create_time, update_time
        from edu_student
        where id = #{id}
    </select>

    <select id="selectEduStudentDetailsList" resultMap="EduStudentDetailsResult">
        select id, student_id, school, major, grade, classinfo, age, sex, email, code_ability, study_ability, thinking_ability, create_time, update_time
        from edu_student_details
        where student_id = #{student_id}
    </select>

    <insert id="insertEduStudent" parameterType="EduStudent" useGeneratedKeys="true" keyProperty="id">
        insert into edu_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="phoneNumber != null">phone_number,</if>
            <if test="url != null">url,</if>
            <if test="password != null">password,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="url != null">#{url},</if>
            <if test="phoneNumber != null">#{phoneNumber},</if>
            <if test="password != null">#{password},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateEduStudent" parameterType="EduStudent">
        update edu_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="url != null">url = #{url},</if>
            <if test="phoneNumber != null">phone_number = #{phoneNumber},</if>
            <if test="password != null">password = #{password},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEduStudentById" parameterType="Long">
        delete from edu_student where id = #{id}
    </delete>

    <delete id="deleteEduStudentByIds" parameterType="String">
        delete from edu_student where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteEduStudentDetailsByStudentIds" parameterType="String">
        delete from edu_student_details where student_id in
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>

    <delete id="deleteEduStudentDetailsByStudentId" parameterType="Long">
        delete from edu_student_details where student_id = #{studentId}
    </delete>

    <insert id="batchEduStudentDetails">
        insert into edu_student_details( id, student_id, school, major, grade, classinfo, age, sex, email, code_ability, study_ability, thinking_ability, create_time, update_time) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.studentId}, #{item.school}, #{item.major}, #{item.grade}, #{item.classinfo}, #{item.age}, #{item.sex}, #{item.email}, #{item.codeAbility}, #{item.studyAbility}, #{item.thinkingAbility}, #{item.createTime}, #{item.updateTime})
        </foreach>
    </insert>
</mapper>
